"""added comment

Revision ID: 43dcda5c1b6a
Revises: e657235669b5
Create Date: 2023-04-07 19:33:48.172394

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '43dcda5c1b6a'
down_revision = 'e657235669b5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_comment_id', table_name='comment')
    op.drop_table('comment')
    op.drop_table('articles_tags')
    op.drop_index('ix_note_id', table_name='note')
    op.drop_table('note')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_article_id', table_name='article')
    op.drop_table('article')
    op.drop_index('ix_tag_id', table_name='tag')
    op.drop_table('tag')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tag_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tag_id', 'tag', ['id'], unique=False)
    op.create_table('article',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='article_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_article_id', 'article', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_table('note',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='note_pkey')
    )
    op.create_index('ix_note_id', 'note', ['id'], unique=False)
    op.create_table('articles_tags',
    sa.Column('article_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], name='articles_tags_article_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='articles_tags_tag_id_fkey'),
    sa.PrimaryKeyConstraint('article_id', 'tag_id', name='articles_tags_pkey')
    )
    op.create_table('comment',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )
    op.create_index('ix_comment_id', 'comment', ['id'], unique=False)
    # ### end Alembic commands ###
